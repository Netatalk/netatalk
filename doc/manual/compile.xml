<?xml version="1.0" encoding="utf-8"?>
<appendix id="compile">
	<title>Compile Netatalk from Source</title>
	<sect1 id="compile-overview">
		<title>Overview</title>
	</sect1>
	<sect1>
		<para>
            This section describes how to compile Netatalk from source for specific operating systems.
            </para>
		<para>
            The Netatalk project is in the process of transitioning the build system
            from GNU Autotools to Meson.
            During the transitional period,
            the documentation will contain both Autotools and Meson build instructions.
            </para>
		<para>
            Please note that this document is automatically generated from the GitHub workflow YAML file.
            This may or may not be the most optimal way to build Netatalk for your system.
            </para>
	</sect1>
	<sect1 id="compile-os">
		<title>Operating Systems</title>
	</sect1>
	<sect1>
		<para>
            Note: You only have to use execute the steps for one of the build systems, not both.
            Additionally, the test steps are entirely optional for compiling from source.
            </para>
		<sect2 id="build-ubuntu">
			<title>Ubuntu</title>
			<para>Install dependencies</para>
			<para>
				<screen>sudo apt-get update
sudo apt-get install --assume-yes --no-install-recommends autoconf \
automake \
bison \
docbook-xsl \
flex \
libacl1-dev \
libavahi-client-dev \
libcrack2-dev \
libdb-dev \
libdbus-1-dev \
libdbus-glib-1-dev \
libevent-dev \
libgcrypt-dev \
libglib2.0-dev \
libkrb5-dev \
libldap2-dev \
libmysqlclient-dev \
libpam0g-dev \
libssl-dev \
libtalloc-dev \
libtool \
libtool-bin \
libtracker-sparql-3.0-dev \
libwrap0-dev \
meson \
ninja-build \
systemtap-sdt-dev \
tcpd \
tracker \
xsltproc

</screen>
			</para>
			<para>Bootstrap</para>
			<para>
				<screen>./bootstrap</screen>
			</para>
			<para>Configure</para>
			<para>
				<screen>./configure \
  --enable-krbV-uam \
  --enable-pgp-uam \
  --with-cracklib \
  --with-docbook=/usr/share/xml/docbook/stylesheet/docbook-xsl \
  --with-tracker-pkgconfig-version=3.0
</screen>
			</para>
			<para>Generate man pages</para>
			<para>
				<screen>make html</screen>
			</para>
			<para>Build</para>
			<para>
				<screen>make -j $(nproc) all</screen>
			</para>
			<para>Run tests</para>
			<para>
				<screen>make check</screen>
			</para>
			<para>Run distribution tests</para>
			<para>
				<screen>make distcheck</screen>
			</para>
			<para>Meson configure</para>
			<para>
				<screen>meson setup build \
  -Dbuild-tests=true \
  -Dbuild-manual=true
</screen>
			</para>
			<para>Meson build and generate man pages</para>
			<para>
				<screen>ninja -C build</screen>
			</para>
			<para>Meson tests</para>
			<para>
				<screen>cd build &amp;&amp; meson test</screen>
			</para>
			<para>Meson distribution tests</para>
			<para>
				<screen>cd build &amp;&amp; meson dist</screen>
			</para>
		</sect2>
		<sect2 id="build-debian">
			<title>Debian</title>
			<para>Install dependencies</para>
			<para>
				<screen>apt-get update
apt-get install --assume-yes --no-install-recommends \
  autoconf \
  automake \
  bison \
  default-libmysqlclient-dev \
  file \
  flex \
  gcc \
  libacl1-dev \
  libavahi-client-dev \
  libcrack2-dev \
  libdb-dev \
  libdbus-1-dev \
  libdbus-glib-1-dev \
  libevent-dev \
  libgcrypt-dev \
  libglib2.0-dev \
  libkrb5-dev \
  libldap2-dev \
  libltdl-dev \
  libpam0g-dev \
  libssl-dev \
  libtalloc-dev \
  libtool \
  libtool-bin \
  libtracker-sparql-3.0-dev \
  libwrap0-dev \
  make \
  meson \
  ninja-build \
  systemtap-sdt-dev \
  tcpd \
  tracker
</screen>
			</para>
			<para>Bootstrap</para>
			<para>
				<screen>./bootstrap</screen>
			</para>
			<para>Configure</para>
			<para>
				<screen>./configure \
  --disable-dependency-tracking \
  --enable-krbV-uam \
  --enable-pgp-uam \
  --with-cracklib \
  --with-tracker-pkgconfig-version=2.0
</screen>
			</para>
			<para>Build</para>
			<para>
				<screen>make -j $(nproc) all</screen>
			</para>
			<para>Run tests</para>
			<para>
				<screen>make check</screen>
			</para>
			<para>Meson configure</para>
			<para>
				<screen>meson setup build \
  -Dbuild-tests=true
</screen>
			</para>
			<para>Meson build</para>
			<para>
				<screen>ninja -C build</screen>
			</para>
			<para>Meson tests</para>
			<para>
				<screen>cd build &amp;&amp; meson test</screen>
			</para>
		</sect2>
		<sect2 id="build-fedora">
			<title>Fedora</title>
			<para>Install dependencies</para>
			<para>
				<screen>dnf -y install \
  automake \
  avahi-devel \
  bison \
  cracklib-devel \
  dbus-devel \
  dbus-glib-devel \
  flex \
  glib2-devel \
  krb5-devel \
  libacl-devel \
  libdb-devel \
  libgcrypt-devel \
  libtalloc-devel \
  libtool \
  meson \
  ninja-build \
  openldap-devel \
  openssl-devel \
  pam-devel \
  perl \
  systemtap-sdt-devel \
  tracker-devel
</screen>
			</para>
			<para>Bootstrap</para>
			<para>
				<screen>./bootstrap</screen>
			</para>
			<para>Configure</para>
			<para>
				<screen>./configure \
  --enable-krbV-uam \
  --enable-pgp-uam \
  --with-cracklib \
  --with-init-style=redhat-systemd \
  --with-tracker-pkgconfig-version=3.0
</screen>
			</para>
			<para>Build</para>
			<para>
				<screen>make -j $(nproc)</screen>
			</para>
			<para>Run tests</para>
			<para>
				<screen>make check</screen>
			</para>
			<para>Meson configure</para>
			<para>
				<screen>meson setup build \
  -Dbuild-tests=true
</screen>
			</para>
			<para>Meson build</para>
			<para>
				<screen>ninja -C build</screen>
			</para>
			<para>Meson tests</para>
			<para>
				<screen>cd build &amp;&amp; meson test</screen>
			</para>
		</sect2>
		<sect2 id="build-macos">
			<title>macOS</title>
			<para>Install dependencies</para>
			<para>
				<screen>brew install automake libressl mysql talloc krb5 berkeley-db meson</screen>
			</para>
			<para>Bootstrap</para>
			<para>
				<screen>./bootstrap</screen>
			</para>
			<para>Configure</para>
			<para>
				<screen>./configure \
  --enable-krbV-uam \
  --enable-pgp-uam \
  --with-bdb=/usr/local/opt/berkeley-db \
  --with-ssl-dir=/usr/local/opt/libressl
</screen>
			</para>
			<para>Build</para>
			<para>
				<screen>make -j $(nproc) all</screen>
			</para>
			<para>Run tests</para>
			<para>
				<screen>make check</screen>
			</para>
			<para>Meson configure</para>
			<para>
				<screen>meson setup build \
  -Dwith-bdb=/usr/local/opt/berkeley-db \
  -Dwith-ssl-dir=/usr/local/opt/libressl \
  -Dbuild-tests=true
</screen>
			</para>
			<para>Meson build</para>
			<para>
				<screen>ninja -C build</screen>
			</para>
			<para>Meson tests</para>
			<para>
				<screen>cd build &amp;&amp; meson test</screen>
			</para>
		</sect2>
		<sect2 id="build-freebsd">
			<title>FreeBSD</title>
			<para>Install dependencies</para>
			<para>
				<screen>pkg install -y \
  autoconf \
  automake \
  avahi \
  bison \
  db5 \
  flex \
  gmake \
  libevent \
  libgcrypt \
  libressl \
  libtool \
  meson \
  pkgconf \
  talloc \
  tracker3
</screen>
			</para>
			<para>Configure and build</para>
			<para>
				<screen>set -e
./bootstrap
./configure \
  --enable-krbV-uam \
  --enable-pgp-uam \
  --with-ssl-dir=/usr/local \
  --with-tracker-pkgconfig-version=3.0 \
  MAKE=gmake \
  PKG_CONFIG_PATH=/usr/local/libdata/pkgconfig
gmake -j $(nproc)
meson setup build \
  -Dpkg_config_path=/usr/local/libdata/pkgconfig
ninja -C build
</screen>
			</para>
		</sect2>
		<sect2 id="build-openbsd">
			<title>OpenBSD</title>
			<para>Install dependencies</para>
			<para>
				<screen>pkg_add -I \
  autoconf-2.71 \
  automake-1.16.5 \
  avahi \
  bison \
  dbus-glib \
  db-4.6.21p7v0 \
  flex \
  gcc-11.2.0p9 \
  gmake \
  libevent \
  libgcrypt \
  libtalloc \
  libtool \
  meson \
  openldap-client-2.6.6v0 \
  pkgconf \
  tracker3
</screen>
			</para>
			<para>Configure and build</para>
			<para>
				<screen>set -e
export AUTOCONF_VERSION=2.71
export AUTOMAKE_VERSION=1.16
autoreconf -fi
./configure \
  --with-tracker-pkgconfig-version=3.0 \
  MAKE=gmake \
  PKG_CONFIG_PATH=/usr/local/lib/pkgconfig
gmake -j $(nproc)
meson setup build \
  -Dpkg_config_path=/usr/local/lib/pkgconfig
ninja -C build
</screen>
			</para>
		</sect2>
		<sect2 id="build-netbsd">
			<title>NetBSD</title>
			<para>Install dependencies</para>
			<para>
				<screen>pkg_add \
  autoconf \
  automake \
  avahi \
  bison \
  db5 \
  dbus-glib \
  flex \
  gcc13 \
  gmake \
  gnome-tracker \
  libevent \
  libgcrypt \
  libressl \
  libtool \
  meson \
  pkg-config \
  talloc
</screen>
			</para>
			<para>Configure and build</para>
			<para>
				<screen>set -e
./bootstrap
./configure \
  --enable-krbV-uam \
  --enable-pgp-uam \
  --with-bdb=/usr/pkg \
  --with-libgcrypt-dir=/usr/pkg \
  --with-tracker-pkgconfig-version=3.0 \
  MAKE=gmake \
  PKG_CONFIG_PATH=/usr/pkg/lib/pkgconfig
gmake -j $(nproc)
meson setup build \
  -Dpkg_config_path=/usr/pkg/lib/pkgconfig
ninja -C build
</screen>
			</para>
		</sect2>
		<sect2 id="build-dflybsd">
			<title>DragonflyBSD</title>
			<para>Install dependencies</para>
			<para>
				<screen>pkg install -y \
  autoconf \
  automake \
  avahi \
  bison \
  db5 \
  gmake \
  libevent \
  libgcrypt \
  libtool \
  meson \
  perl5 \
  pkgconf \
  py39-gdbm \
  py39-sqlite3 \
  py39-tkinter \
  talloc \
  tracker3
</screen>
			</para>
			<para>Configure and build</para>
			<para>
				<screen>set -e
./bootstrap
./configure \
  --with-ssl-dir=/usr/local \
  --with-tracker-pkgconfig-version=3.0 \
  LDFLAGS=-L/usr/local/lib \
  MAKE=gmake
gmake -j2
meson setup build
ninja -C build
</screen>
			</para>
		</sect2>
		<sect2 id="build-solaris">
			<title>Solaris</title>
			<para>Install dependencies</para>
			<para>
				<screen>pkg install \
  autoconf \
  automake \
  bison \
  flex \
  gcc \
  libevent \
  libgcrypt \
  libtool \
  pkg-config
wget https://ftp.gnu.org/gnu/autoconf/autoconf-2.71.tar.gz --no-check-certificate
wget https://ftp.gnu.org/gnu/automake/automake-1.16.5.tar.gz --no-check-certificate
tar xvf autoconf-2.71.tar.gz
tar xvf automake-1.16.5.tar.gz
cd autoconf-2.71
./configure --prefix=/usr
make
make install
cd ../automake-1.16.5
./configure --prefix=/usr
make
make install
cd ..
</screen>
			</para>
			<para>Configure and build</para>
			<para>
				<screen>set -e
./bootstrap
./configure \
  --enable-krbV-uam \
  --enable-pgp-uam \
  --without-afpstats \
  MAKE=gmake \
  PKG_CONFIG_PATH=/usr/lib/amd64/pkgconfig
gmake -j $(nproc)
</screen>
			</para>
		</sect2>
		<sect2 id="build-omnios">
			<title>OmniOS</title>
			<para>Install dependencies</para>
			<para>
				<screen>pkg install \
  build-essential \
  libtool \
  pkg-config
curl -O https://pkgsrc.smartos.org/packages/SmartOS/bootstrap/bootstrap-trunk-x86_64-20230910.tar.gz
tar -zxpf bootstrap-trunk-x86_64-20230910.tar.gz -C /
export PATH=/opt/local/sbin:/opt/local/bin:/usr/gnu/bin:/usr/bin:/usr/sbin:/sbin:$PATH
pkgin -y install \
  avahi \
  dbus-glib \
  gnome-tracker \
  libevent \
  libgcrypt \
  meson \
  talloc
</screen>
			</para>
			<para>Configure and build</para>
			<para>
				<screen>set -e
export PATH=/opt/local/sbin:/opt/local/bin:/usr/gnu/bin:/usr/bin:/usr/sbin:/sbin:$PATH
./bootstrap
./configure \
  --enable-pgp-uam \
  --with-bdb=/opt/local \
  --with-init-style=solaris \
  --with-ldap=/opt/local \
  --with-libgcrypt-dir=/opt/local \
  --with-tracker-pkgconfig-version=3.0 \
  MAKE=gmake \
  PKG_CONFIG_PATH=/opt/local/lib/pkgconfig
gmake -j $(nproc)
meson setup build \
  -Dpkg_config_path=/opt/local/lib/pkgconfig \
  -Dwith-ldap=/opt/local
ninja -C build
</screen>
			</para>
		</sect2>
		<sect2></sect2>
	</sect1>
</appendix>