<?xml version="1.0" encoding="utf-8"?>
<appendix id="compile">
	<appendixinfo>
		<pubdate>2024-06-29</pubdate>
	</appendixinfo>
	<title>Compile Netatalk from Source</title>
	<sect1 id="compile-overview">
		<title>Overview</title>
	</sect1>
	<sect1>
		<para>This appendix describes how to compile Netatalk from source for specific operating systems.</para>
		<para>Please note that the steps below are automatically generated, and may not be optimized for your system.</para>
		<para>Choose one of the build systems: Autotools or Meson. Test steps are optional.</para>
	</sect1>
	<sect1 id="compile-os">
		<title>Operating Systems</title>
	</sect1>
	<sect1>
		<sect2 id="build-alpine">
			<title>Alpine Linux</title>
			<para>Install dependencies</para>
			<para>
				<screen>apk add \
  acl-dev \
  autoconf \
  automake \
  avahi-compat-libdns_sd \
  avahi-dev \
  build-base \
  cracklib \
  cracklib-dev \
  cracklib-words \
  cups \
  cups-dev \
  curl \
  db-dev \
  gcc \
  krb5-dev \
  libgcrypt-dev \
  libtirpc-dev \
  libtool \
  linux-pam-dev \
  meson \
  ninja \
  openldap-dev \
  openrc \
  openssl-dev \
  pkgconfig \
  rpcsvc-proto-dev
</screen>
			</para>
			<para>Autotools - Bootstrap</para>
			<para>
				<screen>./bootstrap</screen>
			</para>
			<para>Autotools - Configure</para>
			<para>
				<screen>./configure \
  --enable-krbV-uam \
  --enable-openrc \
  --enable-pgp-uam \
  --with-cracklib \
  --with-libtirpc
</screen>
			</para>
			<para>Autotools - Build</para>
			<para>
				<screen>make -j $(nproc)</screen>
			</para>
			<para>Autotools - Run tests</para>
			<para>
				<screen>make check</screen>
			</para>
			<para>Autotools - Install</para>
			<para>
				<screen>make install</screen>
			</para>
			<para>Autotools - Uninstall</para>
			<para>
				<screen>make uninstall</screen>
			</para>
			<para>Meson - Configure</para>
			<para>
				<screen>meson setup build \
  -Dwith-tests=true \
  -Dwith-init-style=openrc \
  -Dwith-quota=true
</screen>
			</para>
			<para>Meson - Build</para>
			<para>
				<screen>meson compile -C build</screen>
			</para>
			<para>Meson - Run tests</para>
			<para>
				<screen>cd build &amp;&amp; meson test</screen>
			</para>
			<para>Meson - Install</para>
			<para>
				<screen>meson install -C build</screen>
			</para>
			<para>Meson - Uninstall</para>
			<para>
				<screen>ninja -C build uninstall</screen>
			</para>
		</sect2>
		<sect2 id="build-archlinux">
			<title>Arch Linux</title>
			<para>Install dependencies</para>
			<para>
				<screen>pacman -Sy --noconfirm \
  autoconf \
  automake \
  cracklib \
  gcc \
  libtool \
  make \
  meson \
  ninja \
  pkgconfig \
  rpcsvc-proto
</screen>
			</para>
			<para>Autotools - Bootstrap</para>
			<para>
				<screen>./bootstrap</screen>
			</para>
			<para>Autotools - Configure</para>
			<para>
				<screen>./configure \
  --disable-install-privileged \
  --enable-systemd \
  --with-cracklib
</screen>
			</para>
			<para>Autotools - Build</para>
			<para>
				<screen>make -j $(nproc)</screen>
			</para>
			<para>Autotools - Run tests</para>
			<para>
				<screen>make check</screen>
			</para>
			<para>Autotools - Install</para>
			<para>
				<screen>make install</screen>
			</para>
			<para>Autotools - Uninstall</para>
			<para>
				<screen>make uninstall</screen>
			</para>
			<para>Meson - Configure</para>
			<para>
				<screen>meson setup build \
  -Dwith-tests=true \
  -Dwith-init-hooks=false \
  -Dwith-init-style=systemd
</screen>
			</para>
			<para>Meson - Build</para>
			<para>
				<screen>meson compile -C build</screen>
			</para>
			<para>Meson - Run tests</para>
			<para>
				<screen>cd build &amp;&amp; meson test</screen>
			</para>
			<para>Meson - Install</para>
			<para>
				<screen>meson install -C build</screen>
			</para>
			<para>Meson - Uninstall</para>
			<para>
				<screen>ninja -C build uninstall</screen>
			</para>
		</sect2>
		<sect2 id="build-debian">
			<title>Debian Linux</title>
			<para>Install dependencies</para>
			<para>
				<screen>apt-get update
apt-get install --assume-yes --no-install-recommends autoconf \
automake \
docbook-xsl \
libacl1-dev \
libavahi-client-dev \
libcrack2-dev \
libcups2-dev \
libdb-dev \
libgcrypt-dev \
libkrb5-dev \
libldap2-dev \
libltdl-dev \
libpam0g-dev \
libssl-dev \
libtirpc-dev \
libtool \
libtool-bin \
libwolfssl-dev \
libwrap0-dev \
meson \
ninja-build \
quota \
tcpd \
xsltproc

</screen>
			</para>
			<para>Autotools - Bootstrap</para>
			<para>
				<screen>./bootstrap</screen>
			</para>
			<para>Autotools - Configure</para>
			<para>
				<screen>./configure \
  --enable-debian \
  --enable-krbV-uam \
  --enable-pgp-uam \
  --enable-quota \
  --with-cracklib \
  --with-libtirpc
</screen>
			</para>
			<para>Autotools - Build</para>
			<para>
				<screen>make -j $(nproc) all</screen>
			</para>
			<para>Autotools - Run tests</para>
			<para>
				<screen>make check</screen>
			</para>
			<para>Autotools - Install</para>
			<para>
				<screen>make install</screen>
			</para>
			<para>Autotools - Uninstall</para>
			<para>
				<screen>make uninstall</screen>
			</para>
			<para>Meson - Configure</para>
			<para>
				<screen>meson setup build \
  -Dwith-tests=true \
  -Dwith-init-style=debian-sysv \
  -Dwith-quota=true
</screen>
			</para>
			<para>Meson - Build</para>
			<para>
				<screen>meson compile -C build</screen>
			</para>
			<para>Meson - Tests</para>
			<para>
				<screen>cd build &amp;&amp; meson test</screen>
			</para>
			<para>Meson - Install</para>
			<para>
				<screen>meson install -C build</screen>
			</para>
			<para>Meson - Uninstall</para>
			<para>
				<screen>ninja -C build uninstall</screen>
			</para>
		</sect2>
		<sect2 id="build-fedora">
			<title>Fedora Linux</title>
			<para>Install dependencies</para>
			<para>
				<screen>dnf --setopt=install_weak_deps=False --assumeyes install \
  automake \
  avahi-devel \
  chkconfig \
  cracklib-devel \
  cups-devel \
  file \
  krb5-devel \
  libacl-devel \
  libdb-devel \
  libgcrypt-devel \
  libtool \
  meson \
  ninja-build \
  openldap-devel \
  openssl-devel \
  quota-devel \
  systemd
</screen>
			</para>
			<para>Autotools - Bootstrap</para>
			<para>
				<screen>./bootstrap</screen>
			</para>
			<para>Autotools - Configure</para>
			<para>
				<screen>./configure \
  --enable-krbV-uam \
  --enable-pgp-uam \
  --enable-quota \
  --enable-redhat \
  --with-libtirpc \
  --with-cracklib=/usr/share/cracklib
</screen>
			</para>
			<para>Autotools - Build</para>
			<para>
				<screen>make -j $(nproc) all</screen>
			</para>
			<para>Autotools - Run tests</para>
			<para>
				<screen>make check</screen>
			</para>
			<para>Autotools - Install</para>
			<para>
				<screen>sudo make install</screen>
			</para>
			<para>Autotools - Uninstall</para>
			<para>
				<screen>sudo make uninstall</screen>
			</para>
			<para>Meson - Configure</para>
			<para>
				<screen>meson setup build \
  -Dwith-tests=true \
  -Dwith-quota=true \
  -Dwith-init-style=redhat-systemd
</screen>
			</para>
			<para>Meson - Build</para>
			<para>
				<screen>meson compile -C build</screen>
			</para>
			<para>Meson - Tests</para>
			<para>
				<screen>cd build &amp;&amp; meson test</screen>
			</para>
			<para>Meson - Install</para>
			<para>
				<screen>sudo meson install -C build</screen>
			</para>
			<para>Meson - Uninstall</para>
			<para>
				<screen>sudo ninja -C build uninstall</screen>
			</para>
		</sect2>
		<sect2 id="build-opensuse">
			<title>openSUSE Linux</title>
			<para>Install dependencies</para>
			<para>
				<screen>zypper in -y \
  automake \
  file \
  gawk \
  gcc \
  libtool \
  make \
  meson \
  ninja \
  pkg-config \
  systemd \
  wget &amp;&amp;
zypper in -y \
  cracklib-devel \
  glib2-devel \
  krb5-devel \
  libacl-devel \
  libavahi-devel \
  libdb-4_8-devel \
  libgcrypt-devel \
  libmariadb-devel \
  libopenssl-devel \
  libtdb-devel \
  openldap2-devel \
  pam-devel \
  systemtap-sdt-devel \
  tcpd-devel
</screen>
			</para>
			<para>Autotools - Bootstrap</para>
			<para>
				<screen>./bootstrap</screen>
			</para>
			<para>Autotools - Configure</para>
			<para>
				<screen>./configure \
  --disable-install-priviledged \
  --enable-krbV-uam \
  --enable-pgp-uam \
  --with-cracklib \
  --enable-systemd
</screen>
			</para>
			<para>Autotools - Build</para>
			<para>
				<screen>make -j $(nproc)</screen>
			</para>
			<para>Autotools - Run tests</para>
			<para>
				<screen>make check</screen>
			</para>
			<para>Autotools - Install</para>
			<para>
				<screen>make install</screen>
			</para>
			<para>Autotools - Uninstall</para>
			<para>
				<screen>make uninstall</screen>
			</para>
			<para>Meson - Configure</para>
			<para>
				<screen>meson setup build \
  -Dwith-init-hooks=false \
  -Dwith-init-style=suse-systemd \
  -Dwith-tests=true
</screen>
			</para>
			<para>Meson - Build</para>
			<para>
				<screen>meson compile -C build</screen>
			</para>
			<para>Meson - Run tests</para>
			<para>
				<screen>cd build &amp;&amp; meson test</screen>
			</para>
			<para>Meson - Install</para>
			<para>
				<screen>meson install -C build</screen>
			</para>
			<para>Meson - Uninstall</para>
			<para>
				<screen>ninja -C build uninstall</screen>
			</para>
		</sect2>
		<sect2 id="build-ubuntu">
			<title>Ubuntu Linux</title>
			<para>Install dependencies</para>
			<para>
				<screen>sudo apt-get update
sudo apt-get install --assume-yes --no-install-recommends autoconf \
automake \
docbook-xsl \
libacl1-dev \
libavahi-client-dev \
libcrack2-dev \
libcups2-dev \
libdb-dev \
libgcrypt-dev \
libkrb5-dev \
libldap2-dev \
libltdl-dev \
libpam0g-dev \
libssl-dev \
libtirpc-dev \
libtool \
libtool-bin \
libwolfssl-dev \
libwrap0-dev \
meson \
ninja-build \
quota \
tcpd \
xsltproc

</screen>
			</para>
			<para>Autotools - Bootstrap</para>
			<para>
				<screen>./bootstrap</screen>
			</para>
			<para>Autotools - Configure</para>
			<para>
				<screen>./configure \
  --enable-krbV-uam \
  --enable-pgp-uam \
  --enable-quota \
  --enable-systemd \
  --with-cracklib \
  --with-libtirpc
</screen>
			</para>
			<para>Autotools - Generate manual pages</para>
			<para>
				<screen>make html</screen>
			</para>
			<para>Autotools - Build</para>
			<para>
				<screen>make -j $(nproc) all</screen>
			</para>
			<para>Autotools - Run tests</para>
			<para>
				<screen>make check</screen>
			</para>
			<para>Autotools - Run distribution tests</para>
			<para>
				<screen>make distcheck</screen>
			</para>
			<para>Autotools - Install</para>
			<para>
				<screen>sudo make install</screen>
			</para>
			<para>Start netatalk</para>
			<para>
				<screen>sudo systemctl start afpd &amp;&amp; sleep 2 &amp;&amp; asip-status localhost</screen>
			</para>
			<para>Stop netatalk</para>
			<para>
				<screen>sudo systemctl stop afpd</screen>
			</para>
			<para>Autotools - Uninstall</para>
			<para>
				<screen>sudo make uninstall</screen>
			</para>
			<para>Meson - Configure</para>
			<para>
				<screen>meson setup build \
  -Dwith-tests=true \
  -Dwith-manual=true \
  -Dwith-init-hooks=false \
  -Dwith-init-style=systemd \
  -Dwith-quota=true
</screen>
			</para>
			<para>Meson - Build and generate man pages</para>
			<para>
				<screen>meson compile -C build</screen>
			</para>
			<para>Meson - Tests</para>
			<para>
				<screen>cd build &amp;&amp; meson test</screen>
			</para>
			<para>Meson - Distribution tests</para>
			<para>
				<screen>cd build &amp;&amp; meson dist</screen>
			</para>
			<para>Meson - Install</para>
			<para>
				<screen>sudo meson install -C build</screen>
			</para>
			<para>Start netatalk</para>
			<para>
				<screen>sudo systemctl start afpd &amp;&amp; sleep 2 &amp;&amp; asip-status localhost</screen>
			</para>
			<para>Stop netatalk</para>
			<para>
				<screen>sudo systemctl stop afpd</screen>
			</para>
			<para>Meson - Uninstall</para>
			<para>
				<screen>sudo ninja -C build uninstall</screen>
			</para>
		</sect2>
		<sect2 id="build-macos">
			<title>macOS</title>
			<para>Install dependencies</para>
			<para>
				<screen>brew install automake berkeley-db libressl libtool meson</screen>
			</para>
			<para>Autotools - Bootstrap</para>
			<para>
				<screen>./bootstrap</screen>
			</para>
			<para>Autotools - Configure</para>
			<para>
				<screen>./configure \
  --disable-ddp \
  --enable-krbV-uam \
  --enable-macos \
  --enable-pgp-uam \
  --with-bdb=/opt/homebrew/opt/berkeley-db \
  --with-ssl-dir=/opt/homebrew/opt/libressl
</screen>
			</para>
			<para>Autotools - Build</para>
			<para>
				<screen>make -j $(nproc) all</screen>
			</para>
			<para>Autotools - Run tests</para>
			<para>
				<screen>make check</screen>
			</para>
			<para>Autotools - Install</para>
			<para>
				<screen>sudo make install</screen>
			</para>
			<para>Start netatalk</para>
			<para>
				<screen>sudo netatalkd start &amp;&amp; sleep 2 &amp;&amp; asip-status localhost</screen>
			</para>
			<para>Stop netatalk</para>
			<para>
				<screen>sudo netatalkd stop</screen>
			</para>
			<para>Autotools - Uninstall</para>
			<para>
				<screen>sudo make uninstall</screen>
			</para>
			<para>Meson - Configure</para>
			<para>
				<screen>meson setup build \
  -Dwith-tests=true \
  -Dwith-init-style=macos-launchd
</screen>
			</para>
			<para>Meson - Build</para>
			<para>
				<screen>meson compile -C build</screen>
			</para>
			<para>Meson - Tests</para>
			<para>
				<screen>cd build &amp;&amp; meson test</screen>
			</para>
			<para>Meson - Install</para>
			<para>
				<screen>sudo meson install -C build</screen>
			</para>
			<para>Start netatalk</para>
			<para>
				<screen>sudo netatalkd start &amp;&amp; sleep 2 &amp;&amp; asip-status localhost</screen>
			</para>
			<para>Stop netatalk</para>
			<para>
				<screen>sudo netatalkd stop</screen>
			</para>
			<para>Meson - Uninstall</para>
			<para>
				<screen>sudo ninja -C build uninstall</screen>
			</para>
		</sect2>
		<sect2 id="build-dflybsd">
			<title>DragonflyBSD</title>
			<para>Install required packages</para>
			<para>
				<screen>pkg install -y \
  autoconf \
  automake \
  avahi \
  db5 \
  gmake \
  libgcrypt \
  libtool \
  meson \
  perl5 \
  pkgconf \
  py39-gdbm \
  py39-tkinter
</screen>
			</para>
			<para>Configure and build</para>
			<para>
				<screen>set -e
echo "Building with Autotools"
./bootstrap
./configure \
  --with-ssl-dir=/usr/local \
  LDFLAGS=-L/usr/local/lib \
  MAKE=gmake
gmake -j2
gmake install
gmake uninstall
echo "Building with Meson"
meson setup build
meson compile -C build
meson install -C build
ninja -C build uninstall
</screen>
			</para>
		</sect2>
		<sect2 id="build-freebsd">
			<title>FreeBSD</title>
			<para>Install required packages</para>
			<para>
				<screen>pkg install -y \
  autoconf \
  automake \
  avahi \
  db5 \
  gmake \
  libgcrypt \
  libressl \
  libtool \
  meson \
  openldap26-client-2.6.7 \
  pkgconf
</screen>
			</para>
			<para>Configure and build</para>
			<para>
				<screen>set -e
echo "Building with Autotools"
./bootstrap
./configure \
  --enable-krbV-uam \
  --enable-pgp-uam \
  --with-ldap=/usr/local \
  --with-ssl-dir=/usr/local
  MAKE=gmake \
  PKG_CONFIG_PATH=/usr/local/libdata/pkgconfig
gmake -j $(nproc)
gmake install
gmake uninstall
echo "Building with Meson"
meson setup build \
  -Dpkg_config_path=/usr/local/libdata/pkgconfig
meson compile -C build
meson install -C build
ninja -C build uninstall
</screen>
			</para>
		</sect2>
		<sect2 id="build-netbsd">
			<title>NetBSD</title>
			<para>Install required packages</para>
			<para>
				<screen>pkg_add \
  autoconf \
  automake \
  avahi \
  db5 \
  gcc13 \
  gmake \
  libcups \
  libgcrypt \
  libressl \
  libtool \
  meson \
  pkg-config
</screen>
			</para>
			<para>Configure and build</para>
			<para>
				<screen>set -e
echo "Building with Autotools"
./bootstrap
./configure \
  MAKE=gmake \
  PKG_CONFIG_PATH=/usr/pkg/lib/pkgconfig \
  --enable-krbV-uam \
  --enable-netbsd \
  --enable-pgp-uam
gmake -j $(nproc)
gmake install
service afpd onestart
sleep 2
asip-status localhost
service afpd onestop
echo "Building with Meson"
meson setup build \
  -Dpkg_config_path=/usr/pkg/lib/pkgconfig \
  -Dwith-init-hooks=false \
  -Dwith-init-style=netbsd
meson compile -C build
meson install -C build
service afpd onestart
sleep 2
asip-status localhost
service afpd onestop
ninja -C build uninstall
</screen>
			</para>
		</sect2>
		<sect2 id="build-openbsd">
			<title>OpenBSD</title>
			<para>Install required packages</para>
			<para>
				<screen>pkg_add -I \
  autoconf-2.71 \
  automake-1.16.5 \
  avahi \
  db-4.6.21p7v0 \
  gcc-11.2.0p9 \
  gmake \
  libgcrypt \
  libtool \
  meson \
  openldap-client-2.6.6v0 \
  openpam \
  pkgconf
</screen>
			</para>
			<para>Configure and build</para>
			<para>
				<screen>set -e
echo "Building with Autotools"
export AUTOCONF_VERSION=2.71
export AUTOMAKE_VERSION=1.16
export CFLAGS=-I/usr/local/include
export LDFLAGS=-L/usr/local/lib
autoreconf -fi
./configure \
  --disable-ddp \
  MAKE=gmake \
  PKG_CONFIG_PATH=/usr/local/lib/pkgconfig
gmake -j $(nproc)
gmake install
gmake uninstall
echo "Building with Meson"
meson setup build \
  -Dwith-ddp=false \
  -Dpkg_config_path=/usr/local/lib/pkgconfig
meson compile -C build
meson install -C build
ninja -C build uninstall
</screen>
			</para>
		</sect2>
		<sect2 id="build-omnios">
			<title>OmniOS</title>
			<para>Install required packages</para>
			<para>
				<screen>pkg install \
  build-essential \
  libtool \
  pkg-config
curl -O https://pkgsrc.smartos.org/packages/SmartOS/bootstrap/bootstrap-trunk-x86_64-20240116.tar.gz
tar -zxpf bootstrap-trunk-x86_64-20240116.tar.gz -C /
export PATH=/opt/local/sbin:/opt/local/bin:/usr/gnu/bin:/usr/bin:/usr/sbin:/sbin:$PATH
pkgin -y install \
  avahi \
  libgcrypt \
  meson \
  openldap
</screen>
			</para>
			<para>Configure and build</para>
			<para>
				<screen>set -e
export PATH=/opt/local/sbin:/opt/local/bin:/usr/gnu/bin:/usr/bin:/usr/sbin:/sbin:$PATH
export PKG_CONFIG_PATH=/opt/local/lib/pkgconfig
echo "Building with Autotools"
./bootstrap
./configure \
  --disable-install-privileged \
  --enable-pgp-uam \
  --with-bdb=/opt/local \
  --without-ldap
make -j $(nproc)
make install
make uninstall
echo "Building with Meson"
meson setup build \
  -Dpkg_config_path=/opt/local/lib/pkgconfig \
  -Dwith-init-style=solaris \
  -Dwith-ldap-path=/opt/local
meson compile -C build
meson install -C build
chmod 744 /etc/rc2.d/S90netatalk
chmod 744 /etc/rc0.d/K04netatalk
/etc/rc2.d/S90netatalk start
sleep 2
/usr/local/bin/asip-status localhost
/etc/rc2.d/S90netatalk stop
ninja -C build uninstall
</screen>
			</para>
		</sect2>
		<sect2 id="build-solaris">
			<title>Solaris</title>
			<para>Install required packages</para>
			<para>
				<screen>pkg install \
  autoconf \
  automake \
  gcc \
  libgcrypt \
  libtool \
  pkg-config
wget https://ftp.gnu.org/gnu/autoconf/autoconf-2.71.tar.gz --no-check-certificate
wget https://ftp.gnu.org/gnu/automake/automake-1.16.5.tar.gz --no-check-certificate
tar xvf autoconf-2.71.tar.gz
tar xvf automake-1.16.5.tar.gz
cd autoconf-2.71
./configure --prefix=/usr
make
make install
cd ../automake-1.16.5
./configure --prefix=/usr
make
make install
cd ..
</screen>
			</para>
			<para>Configure and build</para>
			<para>
				<screen>set -e
echo "Building with Autotools"
./bootstrap
./configure \
  MAKE=gmake \
  --enable-cups=no
gmake -j $(nproc) all
gmake install
gmake uninstall
</screen>
			</para>
		</sect2>
		<sect2></sect2>
	</sect1>
</appendix>