<?xml version="1.0" encoding="utf-8"?>
<appendix id="compile">
	<title>Netatalk をソースコードからコンパイルする</title>
	<sect1 id="compile-overview">
		<title>概要</title>
	</sect1>
	<sect1>
		<para>本付録では、特定のオペレーティング システムのソースから Netatalk をコンパイルする方法について説明する。</para>
		<para>以下文章は自動的に生成されるため、お使いのシステムに最適化されていない可能性があることに注意してください。</para>
	</sect1>
	<sect1 id="compile-os">
		<title>オペレーティング システム一覧</title>
	</sect1>
	<sect1>
		<para>ビルド システムとして Autotools と Meson から選択する。 テスト手順は任意である。</para>
		<sect2 id="build-alpine">
			<title>Alpine Linux</title>
			<para>Install dependencies</para>
			<para>
				<screen>apk add \
  acl-dev \
  autoconf \
  automake \
  avahi-dev \
  bison \
  build-base \
  cracklib \
  cracklib-dev \
  cracklib-words \
  curl \
  db-dev \
  dbus-dev \
  dbus-glib-dev \
  flex \
  gcc \
  krb5-dev \
  libevent-dev \
  libgcrypt-dev \
  libtool \
  libtracker \
  linux-pam-dev \
  meson \
  ninja \
  openldap-dev \
  openrc \
  openssl-dev \
  pkgconfig \
  talloc-dev \
  tracker \
  tracker-dev
</screen>
			</para>
			<para>Autotools - Bootstrap</para>
			<para>
				<screen>./bootstrap</screen>
			</para>
			<para>Autotools - Configure</para>
			<para>
				<screen>./configure \
  --enable-krbV-uam \
  --enable-pgp-uam \
  --with-cracklib \
  --with-init-style=openrc \
  --with-libtirpc \
  --with-tracker-pkgconfig-version=3.0
</screen>
			</para>
			<para>Autotools - Build</para>
			<para>
				<screen>make -j $(nproc)</screen>
			</para>
			<para>Autotools - Run tests</para>
			<para>
				<screen>make check</screen>
			</para>
			<para>Autotools - Install</para>
			<para>
				<screen>make install</screen>
			</para>
			<para>Autotools - Uninstall</para>
			<para>
				<screen>make uninstall</screen>
			</para>
			<para>Meson - Configure</para>
			<para>
				<screen>meson setup build \
  -Dbuild-tests=true \
  -Dwith-embedded-ssl=true \
  -Dwith-init-style=openrc
</screen>
			</para>
			<para>Meson - Build</para>
			<para>
				<screen>ninja -C build</screen>
			</para>
			<para>Meson - Run tests</para>
			<para>
				<screen>cd build &amp;&amp; meson test</screen>
			</para>
			<para>Meson - Install</para>
			<para>
				<screen>ninja -C build install</screen>
			</para>
			<para>Meson - Uninstall</para>
			<para>
				<screen>ninja -C build uninstall</screen>
			</para>
		</sect2>
		<sect2 id="build-archlinux">
			<title>Arch Linux</title>
			<para>Install dependencies</para>
			<para>
				<screen>pacman -Sy --noconfirm \
  autoconf \
  automake \
  cracklib \
  gcc \
  libtool \
  make \
  meson \
  ninja \
  pkgconfig
</screen>
			</para>
			<para>Autotools - Bootstrap</para>
			<para>
				<screen>./bootstrap</screen>
			</para>
			<para>Autotools - Configure</para>
			<para>
				<screen>./configure \
  --disable-init-hooks \
  --with-cracklib \
  --with-init-style=systemd
</screen>
			</para>
			<para>Autotools - Build</para>
			<para>
				<screen>make -j $(nproc)</screen>
			</para>
			<para>Autotools - Run tests</para>
			<para>
				<screen>make check</screen>
			</para>
			<para>Autotools - Install</para>
			<para>
				<screen>make install</screen>
			</para>
			<para>Autotools - Uninstall</para>
			<para>
				<screen>make uninstall</screen>
			</para>
			<para>Meson - Configure</para>
			<para>
				<screen>meson setup build \
  -Dbuild-tests=true \
  -Ddisable-init-hooks=true \
  -Dwith-embedded-ssl=true \
  -Dwith-init-style=systemd
</screen>
			</para>
			<para>Meson - Build</para>
			<para>
				<screen>ninja -C build</screen>
			</para>
			<para>Meson - Run tests</para>
			<para>
				<screen>cd build &amp;&amp; meson test</screen>
			</para>
			<para>Meson - Install</para>
			<para>
				<screen>ninja -C build install</screen>
			</para>
			<para>Meson - Uninstall</para>
			<para>
				<screen>ninja -C build uninstall</screen>
			</para>
		</sect2>
		<sect2 id="build-debian">
			<title>Debian Linux</title>
			<para>Install dependencies</para>
			<para>
				<screen>apt-get update
apt-get install --assume-yes --no-install-recommends \
  autoconf \
  automake \
  bison \
  default-libmysqlclient-dev \
  file \
  flex \
  gcc \
  libacl1-dev \
  libavahi-client-dev \
  libcrack2-dev \
  libdb-dev \
  libdbus-1-dev \
  libdbus-glib-1-dev \
  libevent-dev \
  libgcrypt-dev \
  libglib2.0-dev \
  libkrb5-dev \
  libldap2-dev \
  libltdl-dev \
  libpam0g-dev \
  libssl-dev \
  libtalloc-dev \
  libtool \
  libtool-bin \
  libtracker-sparql-3.0-dev \
  libwrap0-dev \
  make \
  meson \
  ninja-build \
  systemtap-sdt-dev \
  tcpd \
  tracker
</screen>
			</para>
			<para>Autotools - Bootstrap</para>
			<para>
				<screen>./bootstrap</screen>
			</para>
			<para>Autotools - Configure</para>
			<para>
				<screen>./configure \
  --disable-dependency-tracking \
  --enable-krbV-uam \
  --enable-pgp-uam \
  --with-cracklib \
  --with-init-style=debian-sysv \
  --with-tracker-pkgconfig-version=3.0
</screen>
			</para>
			<para>Autotools - Build</para>
			<para>
				<screen>make -j $(nproc) all</screen>
			</para>
			<para>Autotools - Run tests</para>
			<para>
				<screen>make check</screen>
			</para>
			<para>Autotools - Install</para>
			<para>
				<screen>make install</screen>
			</para>
			<para>Start netatalk</para>
			<para>
				<screen>/etc/init.d/netatalk start &amp;&amp; sleep 2 &amp;&amp; asip-status localhost</screen>
			</para>
			<para>Stop netatalk</para>
			<para>
				<screen>/etc/init.d/netatalk stop</screen>
			</para>
			<para>Autotools - Uninstall</para>
			<para>
				<screen>make uninstall</screen>
			</para>
			<para>Meson - Configure</para>
			<para>
				<screen>meson setup build \
  -Dbuild-tests=true \
  -Dwith-embedded-ssl=true \
  -Dwith-init-style=debian-sysv
</screen>
			</para>
			<para>Meson - Build</para>
			<para>
				<screen>ninja -C build</screen>
			</para>
			<para>Meson - Run tests</para>
			<para>
				<screen>cd build &amp;&amp; meson test</screen>
			</para>
			<para>Meson - Install</para>
			<para>
				<screen>ninja -C build install</screen>
			</para>
			<para>Start netatalk</para>
			<para>
				<screen>/etc/init.d/netatalk start &amp;&amp; sleep 2 &amp;&amp; asip-status localhost</screen>
			</para>
			<para>Stop netatalk</para>
			<para>
				<screen>/etc/init.d/netatalk stop</screen>
			</para>
			<para>Meson - Uninstall</para>
			<para>
				<screen>ninja -C build uninstall</screen>
			</para>
		</sect2>
		<sect2 id="build-fedora">
			<title>Fedora Linux</title>
			<para>Install dependencies</para>
			<para>
				<screen>dnf --setopt=install_weak_deps=False --assumeyes install \
  automake \
  avahi-devel \
  bison \
  chkconfig \
  cracklib-devel \
  dbus-devel \
  dbus-glib-devel \
  flex \
  glib2-devel \
  krb5-devel \
  libacl-devel \
  libdb-devel \
  libgcrypt-devel \
  libtalloc-devel \
  libtool \
  meson \
  ninja-build \
  openldap-devel \
  openssl-devel \
  pam-devel \
  perl \
  systemd \
  systemtap-sdt-devel \
  tracker-devel
</screen>
			</para>
			<para>Autotools - Bootstrap</para>
			<para>
				<screen>./bootstrap</screen>
			</para>
			<para>Autotools - Configure</para>
			<para>
				<screen>./configure \
  --disable-init-hooks \
  --enable-krbV-uam \
  --enable-pgp-uam \
  --with-cracklib \
  --with-init-style=redhat-systemd \
  --with-tracker-pkgconfig-version=3.0
</screen>
			</para>
			<para>Autotools - Build</para>
			<para>
				<screen>make -j $(nproc)</screen>
			</para>
			<para>Autotools - Run tests</para>
			<para>
				<screen>make check</screen>
			</para>
			<para>Autotools - Install</para>
			<para>
				<screen>sudo make install</screen>
			</para>
			<para>Autotools - Uninstall</para>
			<para>
				<screen>sudo make uninstall</screen>
			</para>
			<para>Meson - Configure</para>
			<para>
				<screen>meson setup build \
  -Dbuild-tests=true \
  -Ddisable-init-hooks=true \
  -Dwith-embedded-ssl=true \
  -Dwith-init-style=redhat-systemd
</screen>
			</para>
			<para>Meson - Build</para>
			<para>
				<screen>ninja -C build</screen>
			</para>
			<para>Meson - Run tests</para>
			<para>
				<screen>cd build &amp;&amp; meson test</screen>
			</para>
			<para>Meson - Install</para>
			<para>
				<screen>sudo ninja -C build install</screen>
			</para>
			<para>Meson - Uninstall</para>
			<para>
				<screen>sudo ninja -C build uninstall</screen>
			</para>
		</sect2>
		<sect2 id="build-opensuse">
			<title>openSUSE Linux</title>
			<para>Install dependencies</para>
			<para>
				<screen>zypper in -y \
  automake \
  file \
  gawk \
  gcc \
  libtool \
  make \
  meson \
  ninja \
  pkg-config \
  systemd \
  wget &amp;&amp;
zypper in -y \
  bison \
  cracklib-devel \
  dbus-1-devel \
  dbus-1-glib-devel \
  flex \
  glib2-devel \
  krb5-devel \
  libacl-devel \
  libavahi-devel \
  libdb-4_8-devel \
  libevent-devel \
  libgcrypt-devel \
  libmariadb-devel \
  libopenssl-devel \
  libtalloc-devel \
  libtdb-devel \
  libtracker-sparql-3_0-0 \
  openldap2-devel \
  pam-devel \
  systemtap-sdt-devel \
  tcpd-devel \
  tracker
</screen>
			</para>
			<para>Autotools - Bootstrap</para>
			<para>
				<screen>./bootstrap</screen>
			</para>
			<para>Autotools - Configure</para>
			<para>
				<screen>./configure \
  --disable-init-hooks \
  --enable-krbV-uam \
  --enable-pgp-uam \
  --with-cracklib \
  --with-init-style=suse-systemd \
  --with-tracker-pkgconfig-version=3.0
</screen>
			</para>
			<para>Autotools - Build</para>
			<para>
				<screen>make -j $(nproc)</screen>
			</para>
			<para>Autotools - Run tests</para>
			<para>
				<screen>make check</screen>
			</para>
			<para>Autotools - Install</para>
			<para>
				<screen>make install</screen>
			</para>
			<para>Autotools - Uninstall</para>
			<para>
				<screen>make uninstall</screen>
			</para>
			<para>Meson - Configure</para>
			<para>
				<screen>meson setup build \
  -Dbuild-tests=true \
  -Ddisable-init-hooks=true \
  -Dwith-embedded-ssl=true \
  -Dwith-init-style=suse-systemd
</screen>
			</para>
			<para>Meson - Build</para>
			<para>
				<screen>ninja -C build</screen>
			</para>
			<para>Meson - Run tests</para>
			<para>
				<screen>cd build &amp;&amp; meson test</screen>
			</para>
			<para>Meson - Install</para>
			<para>
				<screen>ninja -C build install</screen>
			</para>
			<para>Meson - Uninstall</para>
			<para>
				<screen>ninja -C build uninstall</screen>
			</para>
		</sect2>
		<sect2 id="build-ubuntu">
			<title>Ubuntu Linux</title>
			<para>Install dependencies</para>
			<para>
				<screen>sudo apt-get update
sudo apt-get install --assume-yes --no-install-recommends autoconf \
automake \
bison \
docbook-xsl \
flex \
libacl1-dev \
libavahi-client-dev \
libcrack2-dev \
libdb-dev \
libdbus-1-dev \
libdbus-glib-1-dev \
libevent-dev \
libgcrypt-dev \
libglib2.0-dev \
libkrb5-dev \
libldap2-dev \
libmysqlclient-dev \
libpam0g-dev \
libssl-dev \
libtalloc-dev \
libtool \
libtool-bin \
libtracker-sparql-3.0-dev \
libwrap0-dev \
meson \
ninja-build \
systemtap-sdt-dev \
tcpd \
tracker \
xsltproc

</screen>
			</para>
			<para>Autotools - Bootstrap</para>
			<para>
				<screen>./bootstrap</screen>
			</para>
			<para>Autotools - Configure</para>
			<para>
				<screen>./configure \
  --disable-init-hooks \
  --enable-krbV-uam \
  --enable-pgp-uam \
  --with-cracklib \
  --with-docbook=/usr/share/xml/docbook/stylesheet/docbook-xsl \
  --with-init-style=debian-systemd \
  --with-tracker-pkgconfig-version=3.0
</screen>
			</para>
			<para>Autotools - Generate manual pages</para>
			<para>
				<screen>make html</screen>
			</para>
			<para>Autotools - Build</para>
			<para>
				<screen>make -j $(nproc) all</screen>
			</para>
			<para>Autotools - Run tests</para>
			<para>
				<screen>make check</screen>
			</para>
			<para>Autotools - Run distribution tests</para>
			<para>
				<screen>make distcheck</screen>
			</para>
			<para>Autotools - Install</para>
			<para>
				<screen>sudo make install</screen>
			</para>
			<para>Start netatalk</para>
			<para>
				<screen>sudo systemctl start netatalk &amp;&amp; sleep 2 &amp;&amp; asip-status localhost</screen>
			</para>
			<para>Stop netatalk</para>
			<para>
				<screen>sudo systemctl stop netatalk</screen>
			</para>
			<para>Autotools - Uninstall</para>
			<para>
				<screen>sudo make uninstall</screen>
			</para>
			<para>Meson - Configure</para>
			<para>
				<screen>meson setup build \
  -Dbuild-tests=true \
  -Dbuild-manual=true \
  -Dwith-embedded-ssl=true \
  -Ddisable-init-hooks=true \
  -Dwith-init-style=debian-systemd
</screen>
			</para>
			<para>Meson - Build and generate manual pages</para>
			<para>
				<screen>ninja -C build</screen>
			</para>
			<para>Meson - Run tests</para>
			<para>
				<screen>cd build &amp;&amp; meson test</screen>
			</para>
			<para>Meson - Run distribution tests</para>
			<para>
				<screen>cd build &amp;&amp; meson dist</screen>
			</para>
			<para>Meson - Install</para>
			<para>
				<screen>sudo ninja -C build install</screen>
			</para>
			<para>Start netatalk</para>
			<para>
				<screen>sudo systemctl start netatalk &amp;&amp; sleep 2 &amp;&amp; asip-status localhost</screen>
			</para>
			<para>Stop netatalk</para>
			<para>
				<screen>sudo systemctl stop netatalk</screen>
			</para>
			<para>Meson - Uninstall</para>
			<para>
				<screen>sudo ninja -C build uninstall</screen>
			</para>
		</sect2>
		<sect2 id="build-dflybsd">
			<title>DragonflyBSD</title>
			<para>必要なパッケージをインストールする</para>
			<para>
				<screen>pkg install -y \
  autoconf \
  automake \
  avahi \
  bison \
  db5 \
  gmake \
  libevent \
  libgcrypt \
  libtool \
  meson \
  perl5 \
  pkgconf \
  py39-gdbm \
  py39-sqlite3 \
  py39-tkinter \
  talloc \
  tracker3
</screen>
			</para>
			<para>コンフィグレーションとビルド</para>
			<para>
				<screen>set -e
echo "Building with Autotools"
./bootstrap
./configure \
  --with-ssl-dir=/usr/local \
  --with-tracker-pkgconfig-version=3.0 \
  LDFLAGS=-L/usr/local/lib \
  MAKE=gmake
gmake -j2
gmake install
gmake uninstall
echo "Building with Meson"
meson setup build \
  -Dwith-embedded-ssl=true
ninja -C build
ninja -C build install
ninja -C build uninstall
</screen>
			</para>
		</sect2>
		<sect2 id="build-freebsd">
			<title>FreeBSD</title>
			<para>必要なパッケージをインストールする</para>
			<para>
				<screen>pkg install -y \
  autoconf \
  automake \
  avahi \
  bison \
  db5 \
  flex \
  gmake \
  libevent \
  libgcrypt \
  libressl \
  libtool \
  meson \
  openldap26-client-2.6.7 \
  pkgconf \
  talloc \
  tracker3
</screen>
			</para>
			<para>コンフィグレーションとビルド</para>
			<para>
				<screen>set -e
echo "Building with Autotools"
./bootstrap
./configure \
  --enable-krbV-uam \
  --enable-pgp-uam \
  --with-init-style=freebsd \
  --with-ldap=/usr/local \
  --with-ssl-dir=/usr/local \
  --with-tracker-pkgconfig-version=3.0 \
  MAKE=gmake \
  PKG_CONFIG_PATH=/usr/local/libdata/pkgconfig
gmake -j $(nproc)
gmake install
/etc/rc.d/netatalk start
sleep 2
asip-status localhost
/etc/rc.d/netatalk stop
gmake uninstall
echo "Building with Meson"
meson setup build \
  -Dpkg_config_path=/usr/local/libdata/pkgconfig \
  -Dwith-embedded-ssl=true \
  -Dwith-init-style=freebsd
ninja -C build
ninja -C build install
/etc/rc.d/netatalk start
sleep 2
asip-status localhost
/etc/rc.d/netatalk stop
/etc/rc.d/netatalk disable
ninja -C build uninstall
</screen>
			</para>
		</sect2>
		<sect2 id="build-netbsd">
			<title>NetBSD</title>
			<para>必要なパッケージをインストールする</para>
			<para>
				<screen>pkg_add \
  autoconf \
  automake \
  avahi \
  bison \
  db5 \
  dbus-glib \
  flex \
  gcc13 \
  gmake \
  gnome-tracker \
  libevent \
  libgcrypt \
  libressl \
  libtool \
  meson \
  pkg-config \
  talloc
</screen>
			</para>
			<para>コンフィグレーションとビルド</para>
			<para>
				<screen>set -e
echo "Building with Autotools"
./bootstrap
./configure \
  --enable-krbV-uam \
  --enable-pgp-uam \
  --with-bdb=/usr/pkg \
  --with-init-style=netbsd \
  --with-libgcrypt-dir=/usr/pkg \
  --with-tracker-pkgconfig-version=3.0 \
  MAKE=gmake \
  PKG_CONFIG_PATH=/usr/pkg/lib/pkgconfig
gmake -j $(nproc)
gmake install
service netatalk onestart
sleep 2
asip-status localhost
service netatalk onestop
gmake uninstall
echo "Building with Meson"
meson setup build \
  -Dpkg_config_path=/usr/pkg/lib/pkgconfig \
  -Dwith-dtrace=false \
  -Dwith-embedded-ssl=true \
  -Dwith-init-style=netbsd
ninja -C build
ninja -C build install
service netatalk onestart
sleep 2
asip-status localhost
service netatalk onestop
ninja -C build uninstall
</screen>
			</para>
		</sect2>
		<sect2 id="build-openbsd">
			<title>OpenBSD</title>
			<para>必要なパッケージをインストールする</para>
			<para>
				<screen>pkg_add -I \
  autoconf-2.71 \
  automake-1.16.5 \
  avahi \
  bison \
  dbus-glib \
  db-4.6.21p7v0 \
  gcc-11.2.0p9 \
  gmake \
  libevent \
  libgcrypt \
  libtalloc \
  libtool \
  meson \
  openldap-client-2.6.6v0 \
  openpam \
  pkgconf \
  tracker3
</screen>
			</para>
			<para>コンフィグレーションとビルド</para>
			<para>
				<screen>set -e
echo "Building with Autotools"
export AUTOCONF_VERSION=2.71
export AUTOMAKE_VERSION=1.16
export CFLAGS=-I/usr/local/include
export LDFLAGS=-L/usr/local/lib
autoreconf -fi
./configure \
  --with-init-style=openbsd \
  --with-tracker-pkgconfig-version=3.0 \
  MAKE=gmake \
  PKG_CONFIG_PATH=/usr/local/lib/pkgconfig
gmake -j $(nproc)
gmake install
rcctl -d start netatalk
sleep 2
asip-status localhost
rcctl -d stop netatalk
gmake uninstall
echo "Building with Meson"
meson setup build \
  -Dpkg_config_path=/usr/local/lib/pkgconfig \
  -Dwith-embedded-ssl=true \
  -Dwith-init-style=openbsd
ninja -C build
ninja -C build install
rcctl -d start netatalk
sleep 2
asip-status localhost
rcctl -d stop netatalk
rcctl -d disable netatalk
ninja -C build uninstall
</screen>
			</para>
		</sect2>
		<sect2 id="build-macos">
			<title>macOS</title>
			<para>Install dependencies</para>
			<para>
				<screen>brew install automake berkeley-db libressl libtool meson mysql talloc</screen>
			</para>
			<para>Autotools - Bootstrap</para>
			<para>
				<screen>./bootstrap</screen>
			</para>
			<para>Autotools - Configure</para>
			<para>
				<screen>./configure \
  --enable-krbV-uam \
  --enable-pgp-uam \
  --with-bdb=/opt/homebrew/opt/berkeley-db \
  --with-init-style=macos-launchd \
  --with-ssl-dir=/opt/homebrew/opt/libressl
</screen>
			</para>
			<para>Autotools - Build</para>
			<para>
				<screen>make -j $(nproc) all</screen>
			</para>
			<para>Autotools - Run tests</para>
			<para>
				<screen>make check</screen>
			</para>
			<para>Autotools - Install</para>
			<para>
				<screen>sudo make install</screen>
			</para>
			<para>Start netatalk</para>
			<para>
				<screen>sudo /usr/local/bin/netatalkd start &amp;&amp; sleep 2 &amp;&amp; asip-status localhost</screen>
			</para>
			<para>Stop netatalk</para>
			<para>
				<screen>sudo netatalkd stop</screen>
			</para>
			<para>Autotools - Uninstall</para>
			<para>
				<screen>sudo make uninstall</screen>
			</para>
			<para>Meson - Configure</para>
			<para>
				<screen>meson setup build \
  -Dwith-bdb=/opt/homebrew/opt/berkeley-db \
  -Dwith-embedded-ssl=true \
  -Dwith-init-style=macos-launchd \
  -Dwith-ssl-dir=/opt/homebrew/opt/libressl \
  -Dbuild-tests=true
</screen>
			</para>
			<para>Meson - Build</para>
			<para>
				<screen>ninja -C build</screen>
			</para>
			<para>Meson - Run tests</para>
			<para>
				<screen>cd build &amp;&amp; meson test</screen>
			</para>
			<para>Meson - Install</para>
			<para>
				<screen>sudo ninja -C build install</screen>
			</para>
			<para>Start netatalk</para>
			<para>
				<screen>sudo netatalkd start &amp;&amp; sleep 2 &amp;&amp; asip-status localhost</screen>
			</para>
			<para>Stop netatalk</para>
			<para>
				<screen>sudo netatalkd stop</screen>
			</para>
			<para>Meson - Uninstall</para>
			<para>
				<screen>sudo ninja -C build uninstall</screen>
			</para>
		</sect2>
		<sect2 id="build-omnios">
			<title>OmniOS</title>
			<para>必要なパッケージをインストールする</para>
			<para>
				<screen>pkg install \
  build-essential \
  libtool \
  pkg-config
curl -O https://pkgsrc.smartos.org/packages/SmartOS/bootstrap/bootstrap-trunk-x86_64-20230910.tar.gz
tar -zxpf bootstrap-trunk-x86_64-20230910.tar.gz -C /
export PATH=/opt/local/sbin:/opt/local/bin:/usr/gnu/bin:/usr/bin:/usr/sbin:/sbin:$PATH
pkgin -y install \
  avahi \
  dbus-glib \
  gnome-tracker \
  libevent \
  libgcrypt \
  meson \
  talloc
</screen>
			</para>
			<para>コンフィグレーションとビルド</para>
			<para>
				<screen>set -e
export PATH=/opt/local/sbin:/opt/local/bin:/usr/gnu/bin:/usr/bin:/usr/sbin:/sbin:$PATH
echo "Building with Autotools"
./bootstrap
./configure \
  --enable-pgp-uam \
  --with-bdb=/opt/local \
  --with-init-style=solaris \
  --with-ldap=/opt/local \
  --with-libgcrypt-dir=/opt/local \
  --with-tracker-pkgconfig-version=3.0 \
  MAKE=gmake \
  PKG_CONFIG_PATH=/opt/local/lib/pkgconfig
gmake -j $(nproc)
gmake install
svcadm enable svc:/network/netatalk:default
sleep 2
/usr/local/bin/asip-status localhost
svcadm disable svc:/network/netatalk:default
gmake uninstall
echo "Building with Meson"
meson setup build \
  -Dpkg_config_path=/opt/local/lib/pkgconfig \
  -Dwith-embedded-ssl=true \
  -Dwith-init-style=solaris \
  -Dwith-ldap=/opt/local
ninja -C build
ninja -C build install
svcadm enable svc:/network/netatalk:default
sleep 2
/usr/local/bin/asip-status localhost
svcadm disable svc:/network/netatalk:default
ninja -C build uninstall
</screen>
			</para>
		</sect2>
		<sect2 id="build-solaris">
			<title>Solaris</title>
			<para>必要なパッケージをインストールする</para>
			<para>
				<screen>pkg install \
  autoconf \
  automake \
  bison \
  flex \
  gcc \
  libevent \
  libgcrypt \
  libtool \
  pkg-config
wget https://ftp.gnu.org/gnu/autoconf/autoconf-2.71.tar.gz --no-check-certificate
wget https://ftp.gnu.org/gnu/automake/automake-1.16.5.tar.gz --no-check-certificate
tar xvf autoconf-2.71.tar.gz
tar xvf automake-1.16.5.tar.gz
cd autoconf-2.71
./configure --prefix=/usr
make
make install
cd ../automake-1.16.5
./configure --prefix=/usr
make
make install
cd ..
</screen>
			</para>
			<para>コンフィグレーションとビルド</para>
			<para>
				<screen>set -e
echo "Building with Autotools"
./bootstrap
./configure \
  --enable-krbV-uam \
  --enable-pgp-uam \
  --with-init-style=solaris \
  --without-afpstats \
  MAKE=gmake \
  PKG_CONFIG_PATH=/usr/lib/amd64/pkgconfig
gmake -j $(nproc)
gmake install
svcadm enable svc:/network/netatalk:default
sleep 2
/usr/local/bin/asip-status localhost
svcadm disable -s svc:/network/netatalk:default
gmake uninstall
</screen>
			</para>
		</sect2>
		<sect2></sect2>
	</sect1>
</appendix>