name: Checks
on:
  push:
    branches:
      - main
      - branch-*
    paths-ignore:
      - 'config/**'
      - 'distrib/**'
      - 'doc/**'
      - 'man/**'
      - 'NEWS'
      - 'README.md'
  pull_request:
    types: [opened, synchronize, reopened]

env:
  APT_PACKAGES: libtool libtool-bin automake autoconf libevent-dev libssl-dev libgcrypt-dev libkrb5-dev libpam0g-dev libdb-dev libtdb-dev libmysqlclient-dev libavahi-client-dev libacl1-dev libcrack2-dev libdbus-1-dev libdbus-glib-1-dev libglib2.0-dev tracker tcpd

jobs:
  build-ubuntu:
    name: Ubuntu
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: sudo apt-get install --assume-yes --no-install-recommends ${{ env.APT_PACKAGES }}
      - name: Build
        run: ./bootstrap && ./configure --with-dtrace=no && make -j $(nproc) # disable dtrace; issue #313
      - name: Run tests
        run: make check

  build-macos:
    name: macOS
    runs-on: macos-13
    env:
      HOMEBREW_NO_INSTALL_CLEANUP: 1
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
      - run: brew install automake libressl mysql pkg-config
      - name: Build
      - run: ./bootstrap && ./configure --with-ssl-dir=/usr/local/opt/libressl --with-bdb=/usr/local/opt/berkeley-db && make -j $(nproc)
      - name: Run tests
      - run: make check

  static_analysis:
    name: Static Analysis
    runs-on: ubuntu-22.04
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
    if: ${{ !github.event.pull_request.head.repo.fork }} # Run only if not originating from a fork
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Install dependencies
        run: sudo apt-get install --assume-yes --no-install-recommends ${{ env.APT_PACKAGES }}
      - name: Install sonar-scanner and build-wrapper
        uses: SonarSource/sonarcloud-github-c-cpp@v1
      - name: Run build-wrapper
        run: |
          mkdir -p ${{ env.BUILD_WRAPPER_OUT_DIR }}
          ./bootstrap
          ./configure
          build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} make -j $(nproc) all
      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}"
