name: Code Analysis
on:
  push:
    branches:
      - main
      - branch-*
  pull_request:
    branches:
      - main
      - branch-*
    types:
      - opened
      - synchronize
      - reopened

permissions: read-all

jobs:
  static_analysis:
    name: SonarQube Static Analysis
    runs-on: ubuntu-latest
    if: >
      (github.event_name == 'push' && github.actor != 'dependabot[bot]' && github.actor != 'dependabot') || (github.event_name
      == 'pull_request' && !github.event.pull_request.head.repo.fork && github.actor != 'dependabot[bot]' && github.actor
      != 'dependabot')
    container:
      image: ubuntu:25.10
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
      - name: Install dependencies
        run: |
          apt-get update
          apt-get install --assume-yes --no-install-recommends \
              bison \
              ca-certificates \
              cracklib-runtime \
              curl \
              flex \
              gcc \
              libacl1-dev \
              libavahi-client-dev \
              libcrack2-dev \
              libcups2-dev \
              libdb-dev \
              libdbus-1-dev \
              libevent-dev \
              libgcrypt20-dev \
              libglib2.0-dev \
              libiniparser-dev \
              libkrb5-dev \
              libldap2-dev \
              libmariadb-dev \
              libpam0g-dev \
              libtalloc-dev \
              libtirpc-dev \
              libtracker-sparql-3.0-dev \
              libwrap0-dev \
              meson \
              ninja-build \
              systemtap-sdt-dev \
              tracker-miner-fs \
              unzip
      - name: Install Build Wrapper
        uses: SonarSource/sonarqube-scan-action/install-build-wrapper@fd88b7d7ccbaefd23d8f36f73b59db7a3d246602 # v6.0.0
      - name: Run build wrapper
        run: |
          mkdir -p ${{ env.BUILD_WRAPPER_OUT_DIR }}
          meson setup build \
              -Dbuildtype=debug \
              -Dwith-appletalk=true \
              -Dwith-docs= \
              -Dwith-init-style=none \
              -Dwith-tests=true \
              -Dwith-testsuite=true
          build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} meson compile -C build
      - name: Run SonarQube scan
        uses: sonarsource/sonarqube-scan-action@fd88b7d7ccbaefd23d8f36f73b59db7a3d246602 # v6.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: --define sonar.cfamily.compile-commands=${{ env.BUILD_WRAPPER_OUT_DIR }}/compile_commands.json
