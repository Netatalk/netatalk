'\" t
.\"     Title: atalk
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: 17 Dec 1991
.\"    Manual: Netatalk 2.2
.\"    Source: Netatalk 2.2
.\"  Language: English
.\"
.TH "ATALK" "4" "17 Dec 1991" "Netatalk 2.2" "Netatalk 2.2"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
atalk \- AppleTalk protocol family
.SH "SYNOPSIS"
.sp
.ft B
.nf
#include <sys/types\&.h>
#include <netatalk/at\&.h>
.fi
.ft
.SH "DESCRIPTION"
.PP
The AppleTalk protocol family is a collection of protocols layered above the Datagram Delivery Protocol (DDP), and using AppleTalk address format\&. The AppleTalk family may provide SOCK_STREAM (ADSP), SOCK_DGRAM (DDP), SOCK_RDM (ATP), and SOCK_SEQPACKET (ASP)\&. Currently, only DDP is implemented in the kernel; ATP and ASP are implemented in user level libraries; and ADSP is planned\&.
.SH "ADDRESSING"
.PP
AppleTalk addresses are three byte quantities, stored in network byte order\&. The include file <\fBnetatalk/at\&.h\fR> defines the AppleTalk address format\&.
.PP
Sockets in the AppleTalk protocol family use the following address structure:
.sp
.if n \{\
.RS 4
.\}
.nf
struct sockaddr_at {
    short sat_family;
    u_char sat_port;
    struct at_addr sat_addr;
    char sat_zero[ 8 ];
};
.fi
.if n \{\
.RE
.\}
.PP
The port of a socket may be set with
\fBbind\fR(2)\&. The node for
\fBbind\fR
must always be
\fBATADDR_ANYNODE\fR: ``this node\&.\*(Aq\*(Aq The net may be
\fBATADDR_ANYNET\fR
or
\fBATADDR_LATENET\fR\&.
\fBATADDR_ANYNET\fR
coresponds to the machine\*(Aqs ``primary\*(Aq\*(Aq address (the first configured)\&.
\fBATADDR_LATENET\fR
causes the address in outgoing packets to be determined when a packet is sent, i\&.e\&. determined late\&.
\fBATADDR_LATENET\fR
is equivalent to opening one socket for each network interface\&. The port of a socket and either the primary address or
\fBATADDR_LATENET\fR
are returned with
\fBgetsockname\fR(2)\&.
.SH "SEE ALSO"
.PP
\fBbind\fR(2),
\fBgetsockname\fR(2),
\fBatalkd\fR(8)\&.
